{"version":3,"sources":["Settings/BatchAdd.js","Settings/Settings.js","Lottery.js","About.js","App.js","serviceWorker.js","index.js"],"names":["BatchAdd","state","start","last","onChange","event","setState","target","name","value","onSubmit","preventDefault","numbers","i","push","String","props","onAdd","render","type","className","onClick","React","Component","Settings","onListTextboxChange","onListChange","split","onGracePeriodChange","onClear","onExit","participants","filter","str","length","winners","onBatchAdd","nameList","concat","exitButton","to","join","gracePeriod","randrange","n","Math","floor","random","Lottery","running","currentWinner","undefined","inGracePeriod","canStart","onWinnerUpdate","winner","includes","onSave","startGracePeriod","setTimeout","startButton","disabled","stopButton","lotteryNumber","class","role","prevProps","prevState","this","About","href","App","listName","content","console","log","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba7ab0fb.chunk.js","sourcesContent":["import React from 'react';\n\nclass BatchAdd extends React.Component {\n\t/*\n\tThis component display a form so that the user can add a range of\n\tnumbers to the list.\n\n\tprops:\n\t\tonAdd: callback when the user adds a range of numbers.\n\t\t\tShould accept an array of strings.\n\t*/\n\tstate = {start: 1, // Start from this number\n\t\tlast: 10}; // Stop at this number\n\t\n\tonChange = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t}\n\n\tonSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tlet numbers = [];\n\t\tlet start = this.state.start;\n\t\tlet last = this.state.last;\n\t\tfor (let i = start; i <= last; i++) {\n\t\t\tnumbers.push(String(i));\n\t\t}\n\t\tthis.props.onAdd(numbers);\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<p>\n\t\t\t\t\tAdd integers from\n\t\t\t\t\t<input\n\t\t\t\t\t\tname=\"start\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.start}\n\t\t\t\t\t\tonChange={this.onChange} />\n\t\t\t\t\t<label>\n\t\t\t\t\t\tto\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"last\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={this.state.last}\n\t\t\t\t\t\t\tonChange={this.onChange} />\n\t\t\t\t\t</label>\n\t\t\t\t\t(inclusive) into the participants list.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={this.onSubmit}>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\t\t\t</form>);\n\t}\n}\n\nexport default BatchAdd;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './BatchAdd'\nimport BatchAdd from './BatchAdd';\n\nclass Settings extends React.Component {\n  /**\n   * props:\n   *   participants: a list of strings for participants' name\n   *   winners: a list of strings for winners' name\n   *   onListChange(listName, content): callback when the list changes.\n   *     listName is the name of list that changes.\n   *     content is the new list.\n   */\n\n  // Called when the user edits the list\n\tonListTextboxChange = (event) => {\n\t\tthis.props.onListChange(event.target.name,\n\t\t\tevent.target.value.split(\"\\n\"));\n  }\n  \n  // Called when the user edits grade period\n  onGracePeriodChange = (event) => {\n    let newValue = event.target.value;\n    if (newValue >= 0) {\n      this.props.onGracePeriodChange(event.target.value);\n    }\n  }\n\n  // Called when the user click \"clear\"\n\tonClear = (event) => {\n\t\tthis.props.onListChange(event.target.name,\n\t\t\t[]);\n\t}\n\n  // Called before exiting settings page\n\tonExit = (event) => {\n\t\tthis.props.onListChange(\"participants\",\n\t\t\tthis.props.participants.filter(str => str.length > 0));\n\t\tthis.props.onListChange(\"winners\",\n\t\t\tthis.props.winners.filter(str => str.length > 0));\n  }\n  \n  // Called when adding a range of numbes\n  // nameList: a list of strings for participants\n  onBatchAdd = (nameList) => {\n\tthis.props.onListChange(\"participants\",\n\t  this.props.participants.concat(nameList));\n  }\n\n\trender = () => {\n    let exitButton = (\n\t\t\t\t<p>\n        <Link\n            to=\"/\"\n            className=\"btn btn-primary\"\n            onClick={this.onExit}>\n          Back\n        </Link>\n      </p>)\n\n\t\treturn (\n\t\t\t<div className=\"section\">\n\t\t    {/* Exit button */}\n        {exitButton}\n\n\t\t    {/* Participants list */}\n        <h1>Participants</h1>\n        <p>\n          Numbers or names listed here will be selected.\n          Please enter each entry on a seperate line.\n        </p>\n\t\t\t\t<p>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tname=\"participants\"\n\t\t\t\t\t\tvalue={this.props.participants.join(\"\\n\")}\n\t\t\t\t\t\tonChange={this.onListTextboxChange} />\n        <br />\n        <button\n          className=\"btn btn-danger\"\n          name=\"participants\"\n          onClick={this.onClear}>\n            Clear\n        </button></p>\n\n        <hr />\n\n\t\t    {/* Batch add */}\n        <h1>Batch import</h1>\n\t\t\t\t<BatchAdd onAdd={this.onBatchAdd}/>\n\n        <hr />\n\n\t    \t{/* Winner list */}\n        <h1>Winner History</h1>\n\t\t\t\t<p>\n          When you click \"save\", the winner will be saved to this list.\n          Those winners won't be selected again.\n        </p>\n        <textarea\n          name=\"winners\"\n          value={this.props.winners.join(\"\\n\")}\n          onChange={this.onListTextboxChange} />\n        <button\n            className=\"btn btn-danger\"\n            name=\"winners\"\n            onClick={this.onClear}>\n          Clear\n        </button>\n        \n        <hr />\n\n        {/* Error prevention */}\n        <h1> Error Prevention </h1>\n        <p><label>\n          Ignore consecutive button presses within\n          <input\n            type=\"number\"\n            value={this.props.gracePeriod}\n            onChange={this.onGracePeriodChange} />\n            seconds.\n        </label></p>\n        {exitButton}\n\t\t\t</div>)\n\t}\n}\n\nexport default Settings;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nlet updateInterval = 50;\n\nlet randrange = (n) => {\n  return Math.floor(Math.random()*n);\n}\n\nclass Lottery extends React.Component {\n\tstate = {running: false,\n    currentWinner: undefined,\n    inGracePeriod: false};\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.running !== prevState.running) {\n      this.startGracePeriod();\n    }\n\n\t\tif (this.state.running) {\n      setTimeout(this.onWinnerUpdate, updateInterval);\n    }\n  }\n\n  canStart = () => {\n    let participants = this.props.participants;\n    let winners = this.props.winners;\n    return winners.length < participants.length;\n  }\n    \n\tonWinnerUpdate = () => {\n    let winner;\n    let participants = this.props.participants;\n    let winners = this.props.winners;\n    if (!this.canStart()) {\n      this.setState({running: false});\n      return;\n    }\n\n\t\tdo {\n\t\t\twinner = participants[randrange(participants.length)];\n\t\t} while (winners.includes(winner));\n\t\tthis.setState({currentWinner: winner});\n  }\n\n  onSave = () => {\n    this.props.onListChange(\"winners\",\n      this.props.winners.concat([this.state.currentWinner]));\n  }\n\n  startGracePeriod = () => {\n    this.setState({inGracePeriod: true});\n    setTimeout(() => {this.setState({inGracePeriod: false})},\n      this.props.gracePeriod  * 1000);\n  }\n\n\trender = () => {\n    let startButton = (\n\t\t\t<button\n          onClick={() => this.setState({running: true})}\n          className=\"btn btn-primary mx-2\"\n          disabled={this.state.inGracePeriod || !this.canStart()}>\n        Start\n      </button>);\n    let stopButton = (\n\t\t\t<button\n          onClick={() => this.setState({running: false})}\n          className=\"btn btn-danger mx-2\"\n          disabled={this.state.inGracePeriod}>\n        Stop\n      </button>\n    );\n\n    let lotteryNumber = (\n      <p className=\"lotteryNumber\">\n        {this.state.currentWinner?\n          this.state.currentWinner:\n          \"Ready\"}\n      </p>);\n\n\t\treturn (\n\t\t<div className=\"section\">\n      {/* Lottery number */}\n      {this.canStart()?\n        lotteryNumber:\n        <div class=\"alert alert-warning\">\n          There's no valid participant. Please check settings.\n          Note that, because past winners can't win again, the game can't continue\n          if all participants have win. In this case, please clear the winner list.\n        </div>}\n\n      {/* Buttons */}\n      <div className=\"text-center\" role=\"toolbar\">\n        {this.state.running?\n          stopButton:\n          startButton}\n        <button\n            className=\"btn btn-info mx-2\"\n            disabled={this.state.running\n              || this.state.currentWinner === undefined\n              || this.props.winners.includes(this.state.currentWinner)}\n            onClick={this.onSave}>\n          Save\n        </button>\n        <Link to=\"/settings\" className=\"btn btn-info mx-2\">Settings</Link>\n      </div>\n\t\t</div>)\n\t}\n}\n\nexport default Lottery;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass About extends React.Component {\n\trender = () => {\n\n\t\tlet exitButton = (\n\t\t\t<p>\n\t\t\t<Link\n\t\t\t\tto=\"/\"\n\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\tonClick={this.onExit}>\n\t\t\tBack\n\t\t\t</Link>\n\t\t\t</p>)\n\t\treturn (\n\t\t\t<div className=\"section\">\n\t\t\t\t{exitButton}\n\t\t\t\t<p>This software is licensed under MIT license:</p>\n\t\t\t\t<pre className=\"license\">{\n`MIT License\n\nCopyright 2019 Yu Lou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.`\n\t\t\t\t}</pre>\n\t\t\t\t<hr />\n\t\t\t\t<p>This software used the React library, which is licensed under MIT license:</p>\n\t\t\t\t<pre className=\"license\">{\n`MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.`}</pre>\n\t\t\t\t<p>This software used the Bootstrap library, which is licensed under MIT license:</p>\n\t\t\t\t<pre className=\"license\">{\n`The MIT License (MIT)\n\nCopyright (c) 2011-2019 Twitter, Inc.\nCopyright (c) 2011-2019 The Bootstrap Authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.`}</pre>\n\t\t\t\t<p><a href=\"https://www.pexels.com/photo/background-blur-bokeh-bright-220067/\">The background image</a> is license under <a href=\"https://www.pexels.com/photo-license/\">CC0 license</a>.</p>\n        {exitButton}\n\t\t\t</div>)\n\t}\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport './Settings/Settings'\nimport Settings from './Settings/Settings';\nimport Lottery from './Lottery'\nimport About from './About'\nimport { Route, Link } from 'react-router-dom';\n\nclass App extends React.Component {\n  state = {participants: [],\n      winners: [],\n      gracePeriod: 1};\n\n  onListChange = (listName, content) => {\n    this.setState({[listName]: content});\n  }\n\n  onGracePeriodChange = (gracePeriod) => {\n    console.log(gracePeriod);\n    this.setState({gracePeriod: gracePeriod});\n  }\n\n  render = () => {\n    return (\n      <div>\n        <Route exact path=\"/settings\">\n          <Settings\n            onListChange={this.onListChange}\n            onGracePeriodChange={this.onGracePeriodChange}\n            participants={this.state.participants}\n            winners={this.state.winners}\n            gracePeriod={this.state.gracePeriod} />\n        </Route>\n        <Route exact path=\"/\">\n          <Lottery\n            onListChange={this.onListChange}\n            participants={this.state.participants}\n            winners={this.state.winners}\n            gracePeriod={this.state.gracePeriod} />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <div class=\"footer\">\n          <p>\n            Copyright 2019 Yu Lou. <Link to=\"/about\">About</Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}